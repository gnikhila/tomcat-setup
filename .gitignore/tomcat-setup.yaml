- name : create APP layer
  hosts : DEV
  become : yes
  vars :
    - USER_NAME : tomcat
    - TOMCAT_DIR : /tomcat
    - TOMCAT_URL : http://redrockdigimark.com/apachemirror/tomcat/tomcat-9/v9.0.12/bin/apache-tomcat-9.0.12.tar.gz
  tags :
    - APP
  tasks :
    - name : install java
      yum :
        name : java
        state : latest

    - name : create an user for tomcat server
      user :
        name : "{{USER_NAME}}"

    - name : create a directory for tomcat
      file :
        path : "{{TOMCAT_DIR}}"
        mode : 0755
        state : directory
        owner : "{{USER_NAME}}"
        group : "{{USER_NAME}}"

    - name : download and extract tomcat server
      become_user : "{{USER_NAME}}"
      unarchive :
        src : "{{TOMCAT_URL}}"
        dest : "{{TOMCAT_DIR}}"
        remote_src : yes

    - name : define tomcat home variable
      shell : echo "{{TOMCAT_URL}}" | awk -F / '{print $NF}' | sed -e 's/.tar.gz//g'
      register : out

    - name : print the tomcat home
      debug :
        msg : "tomcat home = {{out.stdout}}"

    - name : create the tomcat home variable
      set_fact :
        TOMCAT_HOME : "{{out.stdout}}"

    - name : create mysql and student war variables
      set_fact :
        WAR :
          URL : https://github.com/devops2k18/DevOpsAug/raw/master/APPSTACK/student.war
          DEST : "{{TOMCAT_DIR}}/{{TOMCAT_HOME}}/webapps"
        MYSQL :
          URL : https://github.com/devops2k18/DevOpsAug/raw/master/APPSTACK/mysql-connector-java-5.1.40.jar
          DEST : "{{TOMCAT_DIR}}/{{TOMCAT_HOME}}/lib"

    - name : find all the files from webapps directory
      find :
        paths : "{{TOMCAT_DIR}}/{{TOMCAT_HOME}}/webapps"
        file_type : any
      register : out

    - name : remove all the files
      file :
        path : "{{item.path}}"
        state : absent
      loop : "{{out.files}}"

    - name : download mysql and studnet.war files
      become_user : "{{USER_NAME}}"
      get_url :
        url : "{{item.URL}}"
        dest : "{{item.DEST}}"
      loop :
        - "{{WAR}}"
        - "{{MYSQL}}"

    - name : update context.xml
      blockinfile :
        path : "{{TOMCAT_DIR}}/{{TOMCAT_HOME}}/conf/context.xml"
        block : |
          <Resource name="jdbc/TestDB" auth="Container" type="javax.sql.DataSource" maxTotal="100" maxIdle="30" maxWaitMillis="10000" username="student" password="student@1" driverClassName="com.mysql.jdbc.Driver" url="jdbc:mysql://mariadb:3306/studentdevapp"/>
        insertbefore : "</Context>"

    - name : check tomcat is running or not
      shell : ps -ef | grep tomcat | grep -v grep
      register : out
      ignore_errors : True

    - name : print the output
      debug :
        msg : "{{out}}"

    - name : start the tomcat
      shell : "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME}}/bin/startup.sh"
      when : out.rc != 0

    - name : restart the tomcat
      shell : "nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME}}/bin/shutdown.sh && nohup sh {{TOMCAT_DIR}}/{{TOMCAT_HOME}}/bin/startup.sh"
      when : out.rc == 0


- name : create DB layer for DEV setup
  hosts : DB
  become : yes
  tasks :

    - name : install mysql-python module
      yum :
        name : MySQL-python
        state : latest

    - name : create database variables
      set_fact :
        DB_NAME : studentdevapp
        DB_USER : student
        DB_PASSWORD : student@1

    - name : copy the template into mariadb
      template :
        src : /var/lib/jenkins/files/studentapp.sql.j2
        dest : /tmp/studentapp.sql

    - name : run the sql file
      mysql_db :
        state : import
        name : all
        target : /tmp/studentapp.sql
